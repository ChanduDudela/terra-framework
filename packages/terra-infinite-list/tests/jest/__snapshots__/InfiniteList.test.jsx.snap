// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`InfiniteList should render a default component 1`] = `
<Fragment>
  <List
    className="infinite-list"
    isDivided={false}
    refCallback={[Function]}
    role="none"
  >
    <ListItem
      className="spacer"
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key="infinite-spacer-0"
      style={
        Object {
          "height": "0px",
        }
      }
    />
    <ListItem
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key="infinite-spinner-full"
      style={
        Object {
          "height": "100%",
          "position": "relative",
        }
      }
    />
    <ListItem
      className="spacer"
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key="infinite-spacer-1"
      style={
        Object {
          "height": "0px",
        }
      }
    />
  </List>
</Fragment>
`;

exports[`InfiniteList should render with initial children 1`] = `
<Fragment>
  <List
    className="infinite-list"
    isDivided={false}
    refCallback={[Function]}
    role="none"
  >
    <ListItem
      className="spacer"
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key="infinite-spacer-0"
      style={
        Object {
          "height": "0px",
        }
      }
    />
    <ListItem
      data-infinite-list-index={0}
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key=".$item-1"
      refCallback={[Function]}
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <div
        style={
          Object {
            "height": "20px",
            "width": "100%",
          }
        }
      >
        item 1
      </div>
    </ListItem>
    <ListItem
      data-infinite-list-index={1}
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key=".$item-2"
      refCallback={[Function]}
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <div
        style={
          Object {
            "height": "20px",
            "width": "100%",
          }
        }
      >
        item 2
      </div>
    </ListItem>
    <ListItem
      data-infinite-list-index={2}
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key=".$item-3"
      refCallback={[Function]}
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <div
        style={
          Object {
            "height": "20px",
            "width": "100%",
          }
        }
      >
        item 3
      </div>
    </ListItem>
    <ListItem
      data-infinite-list-index={3}
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key=".$item-4"
      refCallback={[Function]}
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <div
        style={
          Object {
            "height": "20px",
            "width": "100%",
          }
        }
      >
        item 4
      </div>
    </ListItem>
    <ListItem
      className="spacer"
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key="infinite-spacer-1"
      style={
        Object {
          "height": "0px",
        }
      }
    />
  </List>
</Fragment>
`;

exports[`InfiniteList should render with list props 1`] = `
<Fragment>
  <List
    className="infinite-list"
    isDivided={true}
    refCallback={[Function]}
    role="listbox"
  >
    <ListItem
      className="spacer"
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key="infinite-spacer-0"
      style={
        Object {
          "height": "0px",
        }
      }
    />
    <ListItem
      data-infinite-list-index={0}
      hasChevron={false}
      isSelectable={true}
      isSelected={false}
      key=".$item-1"
      refCallback={[Function]}
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <div
        style={
          Object {
            "height": "20px",
            "width": "100%",
          }
        }
      >
        item 1
      </div>
    </ListItem>
    <ListItem
      data-infinite-list-index={1}
      hasChevron={false}
      isSelectable={true}
      isSelected={true}
      key=".$item-2"
      refCallback={[Function]}
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <div
        style={
          Object {
            "height": "20px",
            "width": "100%",
          }
        }
      >
        item 2
      </div>
    </ListItem>
    <ListItem
      data-infinite-list-index={2}
      hasChevron={false}
      isSelectable={true}
      isSelected={false}
      key=".$item-3"
      refCallback={[Function]}
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <div
        style={
          Object {
            "height": "20px",
            "width": "100%",
          }
        }
      >
        item 3
      </div>
    </ListItem>
    <ListItem
      data-infinite-list-index={3}
      hasChevron={false}
      isSelectable={true}
      isSelected={false}
      key=".$item-4"
      refCallback={[Function]}
      style={
        Object {
          "overflow": "hidden",
        }
      }
    >
      <div
        style={
          Object {
            "height": "20px",
            "width": "100%",
          }
        }
      >
        item 4
      </div>
    </ListItem>
    <ListItem
      className="spacer"
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key="infinite-spacer-1"
      style={
        Object {
          "height": "0px",
        }
      }
    />
  </List>
</Fragment>
`;

exports[`InfiniteList should render with list with style props 1`] = `
<ul
  class="list infinite-list"
  data-list-items-divided="true"
  role="listbox"
>
  <li
    class="list-item spacer"
    style="height:0px"
  />
  <li
    aria-selected="false"
    class="list-item is-selectable"
    data-infinite-list-index="0"
    data-item-show-focus="true"
    role="option"
    style="background-color:pink;overflow:hidden"
    tabindex="0"
  >
    <div
      style="height:20px;width:100%"
    >
      item 1
    </div>
  </li>
  <li
    aria-selected="true"
    class="list-item selected is-selectable"
    data-infinite-list-index="1"
    data-item-show-focus="true"
    role="option"
    style="background-color:red;overflow:hidden"
    tabindex="0"
  >
    <div
      style="height:20px;width:100%"
    >
      item 2
    </div>
  </li>
  <li
    aria-selected="false"
    class="list-item is-selectable"
    data-infinite-list-index="2"
    data-item-show-focus="true"
    role="option"
    style="background-color:blue;overflow:hidden"
    tabindex="0"
  >
    <div
      style="height:20px;width:100%"
    >
      item 3
    </div>
  </li>
  <li
    aria-selected="false"
    class="list-item is-selectable"
    data-infinite-list-index="3"
    data-item-show-focus="true"
    role="option"
    style="background-color:yellow;overflow:hidden"
    tabindex="0"
  >
    <div
      style="height:20px;width:100%"
    >
      item 4
    </div>
  </li>
  <li
    class="list-item spacer"
    style="height:0px"
  />
</ul>
`;

exports[`InfiniteList should render with no children and loading 1`] = `
<Fragment>
  <List
    className="infinite-list"
    isDivided={false}
    refCallback={[Function]}
    role="none"
  >
    <ListItem
      className="spacer"
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key="infinite-spacer-0"
      style={
        Object {
          "height": "0px",
        }
      }
    />
    <ListItem
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key="infinite-spinner-full"
      style={
        Object {
          "height": "100%",
          "position": "relative",
        }
      }
    >
      <div
        style={
          Object {
            "height": "100%",
            "position": "relative",
            "width": "100%",
          }
        }
      />
    </ListItem>
    <ListItem
      className="spacer"
      hasChevron={false}
      isSelectable={false}
      isSelected={false}
      key="infinite-spacer-1"
      style={
        Object {
          "height": "0px",
        }
      }
    />
  </List>
</Fragment>
`;
